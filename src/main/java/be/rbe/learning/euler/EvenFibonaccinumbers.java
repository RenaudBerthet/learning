package be.rbe.learning.euler;

public class EvenFibonaccinumbers {
    private static int UPPER_BOUND = 4000000;

//    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//            1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


    public static void main(String[] args) {
        int sumEven = 0;
        int current = 1;
        while (computeFibonacci(current) < UPPER_BOUND) {
            if (isEven(computeFibonacci(current))) {
                System.out.println(current + " : " + computeFibonacci(current) + " : " + isEven(computeFibonacci(current)));
                sumEven += computeFibonacci(current);
            }
            current = current + 1;
        }

        System.out.println("Sum : " + sumEven);

    }

    public static int computeFibonacci(int value) {
        if (value <= 1) {
            return value;
        } else {
            return computeFibonacci(value - 1) + computeFibonacci(value - 2);
        }
    }

    public static boolean isEven(int value) {
        return (value % 2) == 0;
    }
}
